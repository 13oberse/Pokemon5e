@page "/Items"
<h3>Items</h3>

<div class="row">
    <div class="col-md-2">
        <div class="card">
            <div class="card-header">
                Parameters
            </div>
            <div class="card-body">
                <fieldset class="form-group">
                    <legend class="col-form-label">Name</legend>
                    <input class="form-control" type="text" @bind="_name" />
                </fieldset>
                <fieldset class="form-group">
                    <legend class="col-form-label">Effect</legend>
                    <input class="form-control" type="text" @bind="_effect" />
                </fieldset>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <table class="table table-bordered table-striped table-responsive">
            <caption>Results</caption>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var (key, value) in GetList())
                {
                    <tr>
                        <td>@key</td>
                        <td>@value.Effect</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code
{
    [CascadingParameter(Name = "Items")]
    public Dictionary<string, PokemonJsonItem> ItemsList { get; set; } = null!;
    
    private string? _name;
    private string? _effect;
    
    private Dictionary<string, PokemonJsonItem> GetList()
    {
        var query = ItemsList.AsEnumerable();
        if (!string.IsNullOrWhiteSpace(_name))
        {
            query = query.Where(x => x.Key.Contains(_name, StringComparison.CurrentCultureIgnoreCase));
        }
        
        if (!string.IsNullOrWhiteSpace(_effect))
        {
            query = query.Where(x => x.Value.Effect.Contains(_effect, StringComparison.CurrentCultureIgnoreCase));
        }

        return query.ToDictionary(x => x.Key, x => x.Value);
    }
}